### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Mutation {
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, firstName: String!, image: String!, lastName: String!, password: String!, phone: String!, role: String!): AuthPayload
  updateUser(email: String!, firstName: String!, image: String!, lastName: String!, password: String!, phone: String!): User
}

type Query {
  allUsers: [User!]!
  me: User
}

enum Role {
  admin
  driver
  office
}

type User {
  email: String
  firstName: String
  id: String
  image: String
  lastName: String
  password: String
  phone: String
  role: Role
}

input UserCreateInput {
  email: String!
  firstName: String!
  image: String!
  lastName: String!
  phone: String!
  role: Role!
}

input UserUniqueInput {
  email: String!
  id: String!
}